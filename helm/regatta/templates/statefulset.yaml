apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "meta.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "meta.name" . }}
    chart: {{ template "meta.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    team: {{ .Values.team }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "meta.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "meta.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "meta.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "meta.name" . }}
      containers:
      - name: {{ template "meta.name" . }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        args:
        - "--api.address=0.0.0.0:{{ .Values.internalPort }}"
        - --api.cert-filename=/cert/tls.crt
        - --api.key-filename=/cert/tls.key
        - --raft.address=127.0.0.1:5012
        - --raft.node-host-dir=/data/raft
        - --raft.state-machine-dir=/data/state-machine
        {{- if .Values.reflectionAPI.enabled }}
        - --api.reflection-api
        {{- end }}
        - --kafka.brokers={{ .Values.kafka.brokers }}
        - --kafka.timeout={{ .Values.kafka.dialerTimeout }}
        - --kafka.group-id={{ .Values.kafka.groupID }}
        - --kafka.topics={{ .Values.kafka.topics }}
        - --kafka.tls={{ .Values.kafka.tls }}
        - --kafka.server-cert-filename=/kafka-cert/ca.crt
        - --kafka.client-cert-filename=/kafka-cert/tls.crt
        - --kafka.client-key-filename=/kafka-cert/tls.key
        ports:
        - name: https
          containerPort: {{ .Values.internalPort }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /cert
          name: cert
        - mountPath: /kafka-cert
          name: kafka-cert
        - mountPath: /data
          name: data
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ template "meta.name" . }}-cert
      - name: kafka-cert
        secret:
          defaultMode: 420
          secretName: {{ template "meta.name" . }}-kafka-cert
      {{- if .Values.persistence.hostPath }}
      - name: data
        hostPath:
          path: /tmp/{{ template "meta.name" . }}-data
          type: DirectoryOrCreate
      {{- else }}
      - name: data
        emptyDir: {}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
  {{- if not .Values.persistence.hostPath }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
    {{ .Values.persistence.storage | toYaml | nindent 6 }}
  {{- end }}
