name: Test

on:
  push:
    branches:
    - master
  pull_request:
  issue_comment:
    types:
    - created

jobs:
  unit:
    if: (github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')) || github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        go-version: [ 1.20.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Cache
      uses: actions/cache@v3
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Test
      run: make test
  build:
    if: (github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')) || github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Docker build
      uses: docker/build-push-action@v3
      with:
        context: .
        build-args: |
          VERSION=${{ github.ref_name }}
  vulncheck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Scan for Vulnerabilities in Code
      uses: wandera/govulncheck-action@v0.0.9
      with:
        go-version: 1.20.0
        vulncheck-version: latest
        package: ./...
        # TODO switch to false once open sourced
        skip-upload: true
